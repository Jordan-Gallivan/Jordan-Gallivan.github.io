<feed>
  <link href="https://jordangallivan.dev/feed.xml" rel="self" type="application/atom+xml"/>
  <link href="https://jordangallivan.dev/" rel="alternate" type="text/html"/>
  <updated>2022-10-19T16:07:27-08:00</updated>
  <id>https://jordangallivan.dev/feed.xml</id>
  <title type="html">jordangallivan.dev</title>
  
  <!-- First Entry -->
  <entry>
		<title>Now for Some Automation</title>
		<link href="https://jordangallivan.dev/#Now_for_Some_Automation" />
		<link rel="alternate" type="text/html" href="https://jordangallivan.dev/"/>
        <published>2022-10-24T01:15:40Z</published>
		<updated>2022-10-24T01:15:40Z</updated>
		<summary>Details of a python program I wrote to help me update my blog</summary>
        <content type="html">
        <p>When I decided to make my own website, it was important to me to do it from scratch.  It’s foolish at times to reinvent the wheel and can even be looked at unfavorably, but this was first and foremost a learning experience for me.  Needless to say, I learned a tremendous amount along the way. </p>
<p>One of the pitfalls of doing it your own way is simple things like updating a blog entry can become cumbersome.  For each entry I had to update three files (the HTML for the index, the XML for the feed, and the javascript for the drop down menu in the header).  This would require some copy/pasting and wouldn’t be too complicated, but it left it open to mistakes.  In the continuing effort to learn I set out to make a program to automate the updating of these three files and am really excited at how it turned out.  I’ve posted the code to my github (link in the top right corner) and a short synopsis is below</p>
<p>In each of the three files that would need to be updated I added a “catch comment” that would serve as the anchor point for me to insert the required code for each blog entry.  The HTML and XML simply required me to generate some tags around the content and write it into the file at that location.  The javascript was slightly more complicated and required me to add a key:value pair to the object being used in the drop down menu.  For that I located the “{“ and concatenated the strings around the new key:value pair.  It’s been a little while since I wrote python so I was excited to get back into it.  Feel free to check out it out! </p>

		</content>
		<author>
			<name>Jordan Gallivan</name>
		</author>
        </entry>  
  <entry>
		<title>How did I get here</title>
		<link href="https://jordangallivan.dev/#How_did_I_get_here" />
		<link rel="alternate" type="text/html" href="https://jordangallivan.dev/"/>
      <published>2022-10-18T17:23:02Z</published>
		<updated>2022-10-18T17:23:02Z</updated>
		<summary>Initial blog post for jordangallivan.dev</summary>
    <content type="html">
        <p> It's hard to complain when you get to ride in the back seat of a fighter jet.  
            Despite how awesome that part of the job was, it never made me truly happy.  
            As my 10-year career in the Marine Corps came to an end, I knew it was time for a change.  
            What that change would be however, gave me quite a bit of consternation.  
            I had a bachelor’s degree in Aerospace Engineering, a decade of experience in the aviation community, 
            and a resume that could likely get me a job at any one of the big defense contractors.  
            But that wasn’t scratching the itch of what would ultimately make me happy.  
            So, I fell back on what has always given me a sense of satisfaction and accomplishment, coding.  </p>
        <p>I had dabbled in coding projects since college, and it wasn’t until I sat down and committed to MIT’s OpenCourseWare introduction to programming course that I realized computer science is so much more than just writing lines of code.  There’s a science (duh…) to it that goes deeper than conditionals and loops.  On top of all of that is the art of writing good code.  I found I genuinely enjoyed learning about the material and putting it to use in the MIT 6.0001/2 problem sets.  </p>
        <p>Then I tried my hand at the discrete math course, 6.042… It was here that being out of college for over 10 years and the limitations of teaching myself smashed into me with unrelenting force.  I was enthralled by the material and felt like Matt Damon in Goodwill Hunting when I solved a problem, but many hours were spent trying to understand the concepts and even more were spent on trying to do the problem sets.   It was decided then; I would go back to college as a 34 year old, sit in the front of class and soak up as much as I could.  I chose University of North Florida because my wife is doing a Surgical Residency at University of Florida Jacksonville and it’s finally an opportunity for her, myself and our 2 year old son to all live in the same place.  </p>
        <p>I’ll chronicle my journey here for those who are interested.  The focus of this blog will be on what courses a computer science major can expect, centered around the curriculum of University of North Florida.  Much like I’m dusting off my html skills to make this, I’ll include side projects as I go along.</p>
        <p>Thanks for tuning in!</p>
		</content>
		<author>
			<name>Jordan Gallivan</name>
		</author>
	</entry>
    <entry>
		<title>It cant be that hard</title>
		<title>How did I get here</title>
		<link href="https://jordangallivan.dev/#It_cant_be_that_hard" />
		<link rel="alternate" type="text/html" href="https://jordangallivan.dev/"/>
      <published>2022-10-18T17:23:02Z</published>
		<updated>2022-10-18T17:23:02Z</updated>
		<summary>Initial blog post for jordangallivan.dev</summary>
		<content type="html">
		<summary>Learning webdevelopment the hard way</summary>
        <p>When I set out to make my first-ish website, the first thing that crossed my mind was “it can’t be that hard”.  The last time I had written HTML was in college and in 2011 there wasn’t a whole lot to it.  I had taken a lot of shortcuts in styling the website, kept it simple in terms of images and links, and overall remembered it as a good time.</p>
        <p>A fair amount has changed since 2011… This time around I wanted to do it right, so I jumped headfirst into javascript.  Again, I foolishly thought, “I know java, so how hard can it be?” With the hour of free time a night I could steal after the family went to bed, I found out how very wrong I was.  I excitedly poured over w3 schools and MDN and found myself down rabbit holes I didn’t know existed.  But the end product is here.  It still has a long way to go, but now I have something I can continually make changes to as I learn javascript and the nuances of HTML.</p>
		</content>
		<author>
			<name>Jordan Gallivan</name>
		</author>
	</entry>

</feed>

